#!/bin/bash

set -o posix
set -eu

debuilder_on_exit()
{
    # Save the status code of the previous command, i.e. the reason why
    # we are exiting.
    local -r exitval=$?

    # We are already exiting and doing some cleanups. We do not want to
    # exit early.
    set +e

    # Kill all child processes we spawned.
    for pidfile in $DEBUILDER_RUNDIR/*.pid; do
        local childpid=$(cat "$pidfile")
        echo "Killing child [$childpid]"
        kill -TERM "$childpid"
        rm "$pidfile"
    done

    rmdir "$DEBUILDER_RUNDIR"

    exit $exitval
}

if [ $# -eq 1 ]; then
    if [ "$1" = "--daemon" ]; then
        daemon --noconfig --name='debuilder' -- debuilder
        exit 0
    fi
    echo "debuilder: error: unexpected argument '$1'" >&2
    exit 1
fi


# Get essential directory paths defined at installation time.
. debuilder-installdirs

. "$DEBUILDER_LIBDIR/common"

mkdir -p /var/lib/debuilder
dbpath=/var/lib/debuilder/rebuildd.db

cat <<EOF > /etc/rebuildd/rebuilddrc
[build]
check_every = 10
max_threads = $DEBUILDER_THREADS
max_jobs = 5
kill_timeout = 90
source_cmd = true
build_cmd = pbuilder --build --debbuildopts $DEBUILDER_BUILDOPTS --aptcache $DEBUILDER_APTCACHE --basetgz $DEBUILDER_CACHEDIR/debuilder-env.\${d}.\${a}.tgz --buildplace $DEBUILDER_BUILDPLACE --buildresult $DEBUILDER_CACHEDIR/debuilder-result-\${d}-\${a} $DEBUILDER_SPOOLDIR/\${d}/\${p}_\${v}.dsc
post_build_cmd = reprepro -Vb $DEBUILDER_APTREPODIR include \${d} $DEBUILDER_CACHEDIR/debuilder-result-\${d}-\${a}/\${p}_\${v}_\${a}.changes
dists = $DEBUILDER_DISTS
work_dir = /var/cache/rebuildd/build
database_uri = sqlite://$dbpath
build_more_recent = 1
more_archs = $DEBUILDER_ARCHS
no_system_arch = 1

[mail]
from = debuilder@localhost
mailto = debuilder@localhost
subject_prefix = [debuilder]
smtp_host = localhost
smtp_port = 25

[telnet]
port = 9999
ip = 127.0.0.1
prompt = debuilder@localhost->
motd = Connected on debuilder on localhost

[http]
port = 9998
ip = 0.0.0.0
log_lines_nb = 30
templates_dir = /usr/share/rebuildd/templates
cache = 1
logfile = $DEBUILDER_LOGDIR/rebuildd-httpd.log

[log]
file = $DEBUILDER_LOGDIR/rebuildd.log
time_format = %Y-%m-%d %H:%M:%S
logs_dir = $DEBUILDER_BUILDLOGDIR
mail_failed = 0
mail_successful = 0
EOF

[ -f "$dbpath" ] || rebuildd init

# Prepare to cleanup on exit.
trap debuilder_on_exit EXIT

mkdir -p "$DEBUILDER_RUNDIR"
mkdir -p "$DEBUILDER_LOGDIR"
mkdir -p "$DEBUILDER_BUILDLOGDIR"
mkdir -p "$DEBUILDER_CACHEDIR"
mkdir -p "$DEBUILDER_BUILDPLACE"
mkdir -p "$DEBUILDER_APTCACHE"

rebuildd &
echo $! 1>"$DEBUILDER_RUNDIR/rebuildd.pid"

rebuildd-httpd &
echo $! 1>"$DEBUILDER_RUNDIR/rebuildd-httpd.pid"

for dist in $DEBUILDER_DISTS; do
    inoticoming \
        --foreground \
        "$DEBUILDER_SPOOLDIR/$dist" \
        --chdir "$DEBUILDER_SPOOLDIR/$dist" \
        --suffix .dsc \
        "${DEBUILDER_LIBDIR}/add-rebuildd-job" {} "$dist" \; \
        2>&1 1>>"$DEBUILDER_LOGDIR/inoticoming-$dist.log" &
    echo $! 1>"$DEBUILDER_RUNDIR/inoticoming-$dist.pid"
done

wait
